-- This script was generated by the ERD tool in pgAdmin 4.
-- Please log an issue at https://redmine.postgresql.org/projects/pgadmin4/issues/new if you find any bugs, including reproduction steps.
BEGIN;


CREATE TABLE IF NOT EXISTS artistes.artistes
(
    artisteid serial NOT NULL,
    artiste character varying(100) COLLATE pg_catalog."default" NOT NULL,
    datehdebut timestamp without time zone NOT NULL,
    duree time without time zone NOT NULL,
    description text COLLATE pg_catalog."default" NOT NULL,
    imageurl text COLLATE pg_catalog."default" NOT NULL,
    sceneid integer NOT NULL,
    PRIMARY KEY (artisteid)
);

CREATE TABLE IF NOT EXISTS artistes.styles_musicaux
(
    style_musicalid serial NOT NULL,
    style_musical character varying(50) NOT NULL,
    PRIMARY KEY (style_musicalid)
);

CREATE TABLE IF NOT EXISTS artistes.origines
(
    origineid serial NOT NULL,
    origine character varying(50) NOT NULL,
    PRIMARY KEY (origineid)
);

CREATE TABLE IF NOT EXISTS artistes.scenes
(
    sceneid serial NOT NULL,
    scene character varying(20) NOT NULL,
    PRIMARY KEY (sceneid)
);

CREATE TABLE IF NOT EXISTS artistes.styles_musicaux_artistes
(
    styles_musicaux_style_musicalid serial NOT NULL,
    artistes_artisteid serial NOT NULL,
    PRIMARY KEY (styles_musicaux_style_musicalid, artistes_artisteid)
);

CREATE TABLE IF NOT EXISTS artistes.origines_artistes
(
    origines_origineid serial NOT NULL,
    artistes_artisteid serial NOT NULL,
    PRIMARY KEY (origines_origineid, artistes_artisteid)
);

ALTER TABLE IF EXISTS artistes.artistes
    ADD FOREIGN KEY (sceneid)
    REFERENCES artistes.scenes (sceneid) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS artistes.styles_musicaux_artistes
    ADD FOREIGN KEY (styles_musicaux_style_musicalid)
    REFERENCES artistes.styles_musicaux (style_musicalid) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS artistes.styles_musicaux_artistes
    ADD FOREIGN KEY (artistes_artisteid)
    REFERENCES artistes.artistes (artisteid) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS artistes.origines_artistes
    ADD FOREIGN KEY (origines_origineid)
    REFERENCES artistes.origines (origineid) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS artistes.origines_artistes
    ADD FOREIGN KEY (artistes_artisteid)
    REFERENCES artistes.artistes (artisteid) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;

END;


-- suppression de toutes les tables
DROP TABLE IF EXISTS artistes.styles_musicaux_artistes;
DROP TABLE IF EXISTS artistes.origines_artistes;
DROP TABLE IF EXISTS artistes.artistes;
DROP TABLE IF EXISTS artistes.scenes;
DROP TABLE IF EXISTS artistes.styles_musicaux;
DROP TABLE IF EXISTS artistes.origines;

-- Données pour tests
BEGIN;

-- Insertion dans la table "styles_musicaux"
INSERT INTO artistes.styles_musicaux (style_musicalid, style_musical)
VALUES
    (1, 'Rock'),
    (2, 'Pop'),
    (3, 'Hip-Hop'),
    (4, 'Electro'),
    (5, 'R&B');

-- Insertion dans la table "origines"
INSERT INTO artistes.origines (origineid, origine)
VALUES
    (1, 'France'),
    (2, 'États-Unis'),
    (3, 'Royaume-Uni'),
    (4, 'Canada'),
    (5, 'Brésil');

-- Insertion dans la table "scenes"
INSERT INTO artistes.scenes (sceneid, scene)
VALUES
    (1, 'Alpha'),
    (2, 'Beta'),
    (3, 'Gamma'),
    (4, 'Delta'),
    (5, 'Epsilon');

-- Insertion dans la table "artistes"
INSERT INTO artistes.artistes (artisteid, artiste, datehdebut, duree, description, imageurl, sceneid)
VALUES
    (1, 'Artiste 1', '2023-08-15 18:00:00', '01:30:00', 'Description de l''artiste 1', 'image1.jpg', 1),
    (2, 'Artiste 2', '2023-08-15 20:00:00', '01:00:00', 'Description de l''artiste 2', 'image2.jpg', 2),
    (3, 'Artiste 3', '2023-08-16 17:30:00', '01:15:00', 'Description de l''artiste 3', 'image3.jpg', 3);

-- Insertion dans la table de liaison "styles_musicaux_artistes"
INSERT INTO artistes.styles_musicaux_artistes (styles_musicaux_style_musicalid, artistes_artisteid)
VALUES
    (1, 1),
    (2, 1),
    (3, 2),
    (4, 3);

-- Insertion dans la table de liaison "origines_artistes"
INSERT INTO artistes.origines_artistes (origines_origineid, artistes_artisteid)
VALUES
    (1, 1),
    (2, 1),
    (3, 2),
    (4, 3);

COMMIT;


SELECT
    a.artiste,
    sm.style_musical
FROM
    artistes.artistes AS a
JOIN
    artistes.styles_musicaux_artistes AS sma ON a.artisteid = sma.artistes_artisteid
JOIN
    artistes.styles_musicaux AS sm ON sma.styles_musicaux_style_musicalid = sm.style_musicalid

SELECT
    a.artiste,
    o.origine
FROM
    artistes.artistes AS a
JOIN
    artistes.origines_artistes AS oa ON a.artisteid = oa.artistes_artisteid
JOIN
    artistes.origines AS o ON oa.origines_origineid = o.origineid


DELETE FROM artistes.origines_artistes
WHERE origines_origineid > 0;

DELETE FROM artistes.styles_musicaux_artistes
WHERE styles_musicaux_style_musicalid > 0;

DELETE FROM artistes.artistes
WHERE artisteid > 0;

DELETE FROM artistes.styles_musicaux
WHERE style_musicalid > 0;

DELETE FROM artistes.origines
WHERE origineid > 0;

DELETE FROM artistes.scenes
WHERE sceneid > 0;

--Suppresion du premier artiste pour test
DELETE FROM artistes.origines_artistes
WHERE artistes_artisteid = 1;
DELETE FROM artistes.styles_musicaux_artistes
WHERE artistes_artisteid = 1;
DELETE FROM artistes.artistes
WHERE artisteid = 1;


SELECT 
	artistes.artistes.artisteid AS artistes_artistes_artisteid,
	artistes.artistes.artiste AS artistes_artistes_artiste,
	artistes.artistes.datehdebut AS artistes_artistes_datehdebut,
	artistes.artistes.duree AS artistes_artistes_duree,
	artistes.artistes.description AS artistes_artistes_description,
	artistes.artistes.imageurl AS artistes_artistes_imageurl,
	artistes.artistes.sceneid AS artistes_artistes_sceneid
FROM artistes.artistes

select *
from artistes.artistes

select * 
from artistes.styles_musicaux_artistes

select * 
from artistes.origines_artistes

select * 
from artistes.styles_musicaux

select * 
from artistes.scenes

select * 
from artistes.origines
